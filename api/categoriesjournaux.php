<?php
include "../config.php";
header("Content-Type: application/json");
session_start();
error_log("REQUEST METHOD: " . $_SERVER['REQUEST_METHOD']);
error_log("SESSION: " . json_encode($_SESSION));
error_log("INPUT: " . file_get_contents("php://input"));


// ðŸ“Œ Fonction pour renvoyer une rÃ©ponse JSON propre
function jsonResponse($data, $statusCode = 200) {
    http_response_code($statusCode);
    echo json_encode($data);
    exit;
}

// ðŸ”¥ Debugging : VÃ©rification de la session utilisateur
if (!isset($_SESSION['user_id']) || !isset($_SESSION['role'])) {
    jsonResponse(["error" => "AccÃ¨s refusÃ© : utilisateur non connectÃ©"], 403);
}

$currentUserRole = $_SESSION['role'];
error_log("RÃ´le de l'utilisateur : " . $currentUserRole);

// ðŸ“Œ VÃ©rification des permissions
if (!in_array($currentUserRole, ['super_admin', 'admin'])) {
    jsonResponse(["error" => "AccÃ¨s refusÃ© : permissions insuffisantes"], 403);
}

$method = $_SERVER['REQUEST_METHOD'];

switch ($method) {
    case 'GET': // ðŸ“Œ Lire toutes les catÃ©gories avec le nom du comptable responsable
        try {
            $stmt = $pdo->query("
                SELECT 
                    t3.T3_NumJournal, 
                    t3.T3_CodeJournal, 
                    t3.T3_NomJournal, 
                    t3.t4_comptable_id,
                    t4.T4_NomComptable 
                FROM t3_categoriejournaux t3
                LEFT JOIN t4_comptable t4 ON t3.t4_comptable_id = t4.T4_NumComptable
                ORDER BY t3.T3_NumJournal ASC
            ");
            $categories = $stmt->fetchAll(PDO::FETCH_ASSOC);
            jsonResponse($categories);
        } catch (Exception $e) {
            jsonResponse(["error" => "Erreur lors de la rÃ©cupÃ©ration des catÃ©gories : " . $e->getMessage()], 500);
        }
        break;

    case 'POST': // ðŸ“Œ Ajouter une nouvelle catÃ©gorie de journal
    $data = json_decode(file_get_contents("php://input"), true);
    
    error_log("DonnÃ©es reÃ§ues (POST) : " . json_encode($data)); // ðŸ”¥ Debug

    if (empty($data['T3_CodeJournal']) || empty($data['T3_NomJournal']) || empty($data['t4_comptable_id'])) {
        jsonResponse(["error" => "DonnÃ©es incomplÃ¨tes"], 400);
    }


        try {
            $stmt = $pdo->prepare("INSERT INTO t3_categoriejournaux (T3_CodeJournal, T3_NomJournal, t4_comptable_id) VALUES (?, ?, ?)");
            $stmt->execute([$data['T3_CodeJournal'], $data['T3_NomJournal'], $data['t4_comptable_id']]);
            jsonResponse(["message" => "CatÃ©gorie ajoutÃ©e avec succÃ¨s"], 201);
        } catch (Exception $e) {
            jsonResponse(["error" => "Erreur lors de l'ajout : " . $e->getMessage()], 500);
        }
        break;

    case 'PUT': // ðŸ“Œ Modifier une catÃ©gorie
        $data = json_decode(file_get_contents("php://input"), true);

        if (empty($data['T3_NumJournal']) || empty($data['T3_CodeJournal']) || empty($data['T3_NomJournal']) || empty($data['t4_comptable_id'])) {
            jsonResponse(["error" => "DonnÃ©es incomplÃ¨tes"], 400);
        }

        try {
            $stmt = $pdo->prepare("UPDATE t3_categoriejournaux SET T3_CodeJournal = ?, T3_NomJournal = ?, t4_comptable_id = ? WHERE T3_NumJournal = ?");
            $stmt->execute([$data['T3_CodeJournal'], $data['T3_NomJournal'], $data['t4_comptable_id'], $data['T3_NumJournal']]);
            jsonResponse(["message" => "CatÃ©gorie mise Ã  jour"]);
        } catch (Exception $e) {
            jsonResponse(["error" => "Erreur lors de la mise Ã  jour : " . $e->getMessage()], 500);
        }
        break;

    case 'DELETE': // ðŸ“Œ Supprimer une catÃ©gorie
        $data = json_decode(file_get_contents("php://input"), true);

        if (empty($data['T3_NumJournal'])) {
            jsonResponse(["error" => "DonnÃ©es incomplÃ¨tes"], 400);
        }

        try {
            $stmt = $pdo->prepare("DELETE FROM t3_categoriejournaux WHERE T3_NumJournal = ?");
            $stmt->execute([$data['T3_NumJournal']]);
            jsonResponse(["message" => "CatÃ©gorie supprimÃ©e avec succÃ¨s"]);
        } catch (Exception $e) {
            jsonResponse(["error" => "Erreur lors de la suppression : " . $e->getMessage()], 500);
        }
        break;

    default:
        jsonResponse(["error" => "MÃ©thode non autorisÃ©e"], 405);
        break;
}
?>
